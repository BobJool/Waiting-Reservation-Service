bootJar.enabled = true
jar.enabled = true

ext {
    set('querydslVersion', "5.0.0")
}

dependencies {
    //config server 사용
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation project(':common')

    api 'org.springframework.boot:spring-boot-starter-data-jpa'
    api 'org.springframework.boot:spring-boot-starter-validation'
    api 'org.springframework.boot:spring-boot-starter-actuator'
    api 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    api 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // postgresql
    runtimeOnly 'org.postgresql:postgresql'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // JWT
    compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // queryDsl
    implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

def querydslSrcDir = 'src/main/generated'
clean {
    delete file(querydslSrcDir)
}