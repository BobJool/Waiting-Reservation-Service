#server:
#  port: 19030
#
#spring:
#  application:
#    name: queue-service
#  config:
#    import: classpath:config-repo/application-key.yml
#  datasource:
#    driver-class-name: org.postgresql.Driver
#    url: ${DB_URL}/queue_db
#    username: ${DB_USERNAME}
#    password: ${DB_PASSWORD}
#  data:
#    redis:
#      host: ${QUEUE_REDIS_HOSTNAME}
#      port: ${QUEUE_REDIS_PORT}
##      username: default
##      password: password
#  jpa:
#    hibernate:
#      ddl-auto: update
#    show-sql: true
#    properties:
#      format-sql: true
#      use_sql_comments: true
#      hibernate:
#        dialect: org.hibernate.dialect.PostgreSQLDialect
#  jackson:
#    property-naming-strategy: SNAKE_CASE
#  kafka:
#    bootstrap-servers: ${KAFKA_SERVER_URL}
#    consumer: # TODO kafka consumer, producer에 대한 설정값 수정은 여기에서
#      group-id: ${spring.application.name}-group
#      auto-offset-reset: earliest
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#      properties:
#        spring.json.trusted.packages: '*'
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#
#eureka:
#  client:
#    serviceUrl:
#      defaultZone: http://localhost:19000/eureka/
#
#
#management:
#  zipkin:
#    tracing:
#      endpoint: "http://localhost:9411/api/v2/spans"
#  tracing:
#    sampling:
#      probability: 1.0
#
##모든 엔드포인트 노출 설정
#  endpoints:
#    web:
#      exposure:
#        include: "*"
##헬스 체크 엔드포인트 상세 정보 표시 설정
#    health:
#      show-details: always
#
#  #프로메테우스 사용활성화
#  metrics:
#    export:
#      prometheus:
#        enabled: true
#
