server:
  port: 19010

spring:
  application:
    name: auth-service
  config:
    import: classpath:config-repo/application-key.yml
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DB_URL}/user_db
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      format-sql: true
      use_sql_comments: true
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  data:
    redis:
      host: ${SHARED_REDIS_HOSTNAME}
      port: ${SHARED_REDIS_PORT}
  jackson:
    property-naming-strategy: SNAKE_CASE

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:19000/eureka/

service:
  jwt:
    access-expiration: 360000
    secret-key: "401b09eab3c013d4ca54922bb802bec8fd5318192b0a75f201d8b3727429080fb337591abd3e44453b954555b7a0812e1081c39b740293f765eae731f5a65ed1"

management:
  zipkin:
    tracing:
      endpoint: "http://localhost:9411/api/v2/spans"
  tracing:
    sampling:
      probability: 1.0

  #모든 엔드포인트 노출 설정
  endpoints:
    web:
      exposure:
        include: "*"
    #헬스 체크 엔드포인트 상세 정보 표시 설정
    health:
      show-details: always

  #프로메테우스 사용활성화
  metrics:
    export:
      prometheus:
        enabled: true

